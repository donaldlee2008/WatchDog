/*
 * The MIT License (MIT)
 * Copyright (c) 2016 Erandi Ganepola
 * <p>
 * Permission is hereby granted, free of charge,
 * to any person obtaining a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * <p>
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * <p>
 * THE SOFTWARE IS PROVIDED "AS IS",
 * WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package ueg.watchdog.view;

import ueg.watchdog.api.Startable;
import ueg.watchdog.core.WatchDog;

import javax.swing.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 * @author Erandi Ganepola
 */
public class LiveFeed extends WatchDogBaseFrame {

    private WatchDog watchDog;

    public LiveFeed(WatchDogBaseFrame parentFrame) {
        super(parentFrame);
        initComponents();
        super.setCloseOperation();
        watchDog = WatchDog.getInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        pageLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        videoPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pageLabel.setFont(new java.awt.Font("DejaVu Serif", 1, 18)); // NOI18N
        pageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pageLabel.setText("WatchDog - Live Feed");

        startButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        startButton.setText("View");
        startButton.addActionListener(evt -> onStartButtonActionPerformed(evt));

        videoPanel.setName(""); // NOI18N

        javax.swing.GroupLayout jPanelVideoLayout = new javax.swing.GroupLayout(videoPanel);
        videoPanel.setLayout(jPanelVideoLayout);
        jPanelVideoLayout.setHorizontalGroup(
                jPanelVideoLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelVideoLayout.setVerticalGroup(
                jPanelVideoLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                        .addGap(0, 347, Short.MAX_VALUE)
        );

        exitButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(videoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(152, 152, 152)
                                                .addComponent(pageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(91, 91, 91)))
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(pageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(videoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22))
        );

        pack();
    }

    private void onStartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onStartButtonActionPerformedActionPerformed
        if (watchDog.getState() != Startable.State.STARTED) {
            JOptionPane.showMessageDialog(this, "WatchDog must be started to view the live feed", "WatchDog hasn't started", JOptionPane.INFORMATION_MESSAGE);
            logger.warn("Attempting to watch the live feed while WatchDog is in state : {}", watchDog.getState());
            return;
        }

        watchDog.showLiveFeed(videoPanel);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                watchDog.stopLiveFeed();
            }
        });
    }//GEN-LAST:event_onStartButtonActionPerformedActionPerformed

    private void onExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onExitButtonActionPerformedActionPerformed
        watchDog.stopLiveFeed();
        this.exitToParent(false);
    }//GEN-LAST:event_onExitButtonActionPerformedActionPerformed

    private javax.swing.JButton exitButton;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel pageLabel;
    private javax.swing.JPanel videoPanel;
}
